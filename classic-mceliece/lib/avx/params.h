#ifndef PARAMS_H
#define PARAMS_H

#define CRYPTO_SUBJECT_NAME CRYPTO_ALGNAME

#define MCELIECE_8192128 1
#define MCELIECE_8192128f 1
#define MCELIECE_6960119 2
#define MCELIECE_6960119f 2

#ifndef MCELIECE_PARAMETER_SET
#define MCELIECE_PARAMETER_SET MCELIECE_8192128
#endif

#if MCELIECE_PARAMETER_SET == MCELIECE_8192128
#define CRYPTO_ALGNAME "mceliece8192128"
#define SYS_N 8192
#define SYS_T 128

#define CRYPTO_PUBLICKEYBYTES 1357824
#define CRYPTO_SECRETKEYBYTES 14120
#define CRYPTO_CIPHERTEXTBYTES 240
#elif MCELIECE_PARAMETER_SET == MCELIECE_6960119
#define CRYPTO_ALGNAME "mceliece6960119"
#define SYS_N 6960
#define SYS_T 119

#define CRYPTO_PUBLICKEYBYTES 1047319
#define CRYPTO_SECRETKEYBYTES 13948
#define CRYPTO_CIPHERTEXTBYTES 226
#endif

#define CRYPTO_SUBJECT_NAME CRYPTO_ALGNAME
#ifdef USE_F
#undef CRYPTO_SUBJECT_NAME
#define CRYPTO_SUBJECT_NAME CRYPTO_ALGNAME "f"
#endif
#ifdef USE_AVX2
#undef CRYPTO_SUBJECT_NAME
#define CRYPTO_SUBJECT_NAME CRYPTO_ALGNAME " (AVX2)"
#endif


#define GFBITS 13

#define COND_BYTES ((1 << (GFBITS-4))*(2*GFBITS - 1))
#define IRR_BYTES (SYS_T * 2)

#define PK_NROWS (SYS_T*GFBITS) 
#define PK_NCOLS (SYS_N - PK_NROWS)
#define PK_ROW_BYTES ((PK_NCOLS + 7)/8)

#define SYND_BYTES ((PK_NROWS + 7)/8)

#define GFMASK ((1 << GFBITS) - 1)

#endif

